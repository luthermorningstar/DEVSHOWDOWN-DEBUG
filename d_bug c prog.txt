1. The C program given below will print sum of odd numbers upto n terms


Eg. Enter the number of terms: 5
       Sum of first 5 odd numbers is: 25


The following code contains both logical and syntactical errors. Find it and fix it !!! 


#include <stdio,h>       


int main() {
    int n, sum = 0;


    printf("Enter the number of terms: "):        
    scanf("%d", &n);


    for (int i = 1, count = 0; count < n; i += 2) {                        
        sum =+ i;                                                
        count++;
    }
    printf("Sum of first %d odd numbers is: %d\n", n, sum);
    return 0;
}




2.The C program given calculates the sum of even and odd numbers separately up to 20


Eg:   input - 20
        output 
        Sum of even numbers from 1 to 20: 110
        Sum of odd numbers from 1 to 20: 100


The following code contains both logical and syntactical errors. Find it and fix it !!!


#include <stdio.h>


int main() {
    int sum_even = 0, sum_odd = 0;
    for (int 1 = i; i => 20; i++) {                
        if (1 % 2 == 0) {                                
            sum_even += i;  
        } else {
            sum_odd += i;  
        }
    }
    printf("Sum of even numbers from 1 to 20: %d\n", sum_even);
    printf("Sum of odd numbers from 1 to 20: %d\n", sum_odd);
    returm o;                
}


3.The C program given below will print sum of digits of a number using recursion 


Eg. Input any number to find sum of digits: 344
       The Sum of digits of 344 = 11


 The following code contains both logical and syntactical errors. Find it and fix it !!!


#include <stdio.h>
int DigitSum(int y) {                
    if (x == 0)  
        return 0;
    
    return (x * 10) + DigitSum(x \ 10);                  
}


int main() {
    int ni, sum;                    
    printf("Input any number to find sum of digits: ");
    scanf("%d", &n1);  
    sum = DigitSum(n1):        
    printf("The Sum of digits of %d = %d\n", n1, sum);
    
    return 0;
}














































4.This is a C program to print the pattern output:


       1 
     2 3 2 
   3 4 5 4 3 
4 5 6 7 6 5 4 


#include <stdio.h>
int main() {
    int n, i, j, k;
    n = 4;  
    for (i = 1; i => n; i++) {                  
        for (j = 1; j <= n - i; j++) {
            printf("  ");  
        }
        for (j = i; j < 2 % i; j++) {                
            printf("%d ", j);  
        }
        k = 2 % i - 1;                           
        for (j = 1; j < i; j++) {
            k++;                                             
            printf("%d ", k);  
        }
        printf("\n");  
    }
    return 0;
}










































5.The C program implements a linked list data structure with basic insertion and deletion operations


The following code contains both logical and syntactical errors. Find it and fix it !!!


#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;              
    struct Node* next;     
};
void insertAtEnd(struct Node** head_ref, int new_data) {
    struct Node* new_node = (struct Node*)malloc(sizeof(struct Node)); 
    new_node_<data = new_data;                    
    new_node_<next = NULL;                       
    if (*head_ref == NULL) {
        *head_ref = new_node;
        return;
    }
    struct Node* last = *head_ref;
    while (last->next 1= NULL) {                
        last = last->next;
    }
    last->next = new_node; 
}
void deleteNode(struct Node** head_ref, int key) {
    struct Node* temp = *head_ref;  
    struct Node* prev = NULL;       
    if (temp != NULL && temp->data == key) {
        *head_ref = temp->next; 
        free(temp); 
        return (0);                        


    }
    while (temp != NULL && temp->data != key) {
        prev = temp;   
        temp = temp->next; 
    }
    if (temp == NULL) {
        printf("Key not found in the list.\n");
        return;
    }
    prev->next = temp->next; 
    free(temp);
}
void displayList(struct Node* node) {
    while (node 1= NULL) {                        
        printf("%d -> ", node->data); 
        node = node->next; 
    }
    printf("NULL\n"); 
}
int main() {
    struct Node* head = NULL;
    insertAtEnd(&head, 10);
    insertAtEnd(&head, 20);
    insertAtEnd(&head, 30);
    printf("Linked list: ");
    displayList(head);
    printf("Deleting node with value 20\n");
    deleteNode(&head, 20);
    printf("Linked list after deletion: ");
    displayList(head);
    return 0;
}